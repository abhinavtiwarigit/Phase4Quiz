{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/quiz/quiz.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/models/index.ts","webpack:///./src/app/models/option.ts","webpack:///./src/app/models/question.ts","webpack:///./src/app/models/quiz-config.ts","webpack:///./src/app/models/quiz.ts","webpack:///./src/app/quiz/quiz.component.css","webpack:///./src/app/quiz/quiz.component.ts","webpack:///./src/app/services/quiz.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"\\n  <app-quiz></app-quiz>\\n  <!-- Footer -->\\n<footer class=\\\"footer fixed-bottom navbar-expand-sm navbar-dark bg-dark mt-5\\\">\\n\\n  <!-- Copyright -->\\n  <div class=\\\"footer footer-copyright text-center py-3 \\\" style=\\\"color: white;\\\">My first project\\n    \\n  </div>\\n  <!-- Copyright -->\\n\\n</footer>\\n<!-- Footer -->\"","module.exports = \"<nav class=\\\"navbar navbar-default navbar-static-top bg-info\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n      <img src=\\\"https://image.pngaaa.com/664/2956664-middle.png\\\" alt=\\\"\\\" width=\\\"50\\\" height=\\\"40\\\" class=\\\"d-inline-block align-text-top\\\">\\n      Online Test/Quizz Application\\n    </a>\\n    <div class=\\\"col-6 text-right mt-3\\\" style=\\\"color: white;\\\">\\n      Select Quiz Type:\\n      <select class=\\\"form-select form-select-lg mb-3\\\" [(ngModel)]=\\\"quizName\\\" (change)=\\\"loadQuiz(quizName)\\\">\\n        <option *ngFor=\\\"let quiz of quizes\\\" [value]=\\\"quiz.id\\\">{{quiz.name}}</option>\\n      </select>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <!--div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">\\n      <h2 class=\\\"fw-light\\\">Online Test Application</h2>\\n    </div>\\n    <div class=\\\"col-6 text-right mt-3\\\">\\n      Select Quiz Type:\\n      <select [(ngModel)]=\\\"quizName\\\" (change)=\\\"loadQuiz(quizName)\\\">\\n        <option *ngFor=\\\"let quiz of quizes\\\" [value]=\\\"quiz.id\\\">{{quiz.name}}</option>\\n      </select>\\n    </div>\\n  </div-->\\n  <div id=\\\"quiz\\\">\\n    <h2 class=\\\"text-center font-weight-normal\\\">{{quiz.name}}</h2>\\n    <hr />\\n<br/>\\n    <div *ngIf=\\\"mode=='quiz' && quiz\\\">\\n      <div *ngFor=\\\"let question of filteredQuestions;\\\">\\n        <div class=\\\"badge badge-info\\\">Question {{pager.index + 1}} / {{pager.count}}.</div>\\n        <div *ngIf=\\\"config.duration\\\" class=\\\"badge badge-warning float-right\\\">Time: {{ellapsedTime}} / {{duration}}</div>\\n        <h3 class=\\\"font-weight-normal\\\">{{pager.index + 1}}.\\n          <span [innerHTML]=\\\"question.name\\\"></span>\\n        </h3>\\n        <div class=\\\"row text-left options\\\">\\n          <div class=\\\"col-6\\\" *ngFor=\\\"let option of question.options\\\">\\n            <div class=\\\"option\\\">\\n              <label class=\\\"font-weight-normal\\\" [attr.for]=\\\"option.id\\\">\\n                <input id=\\\"{{option.id}}\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"option.selected\\\" (change)=\\\"onSelect(question, option);\\\" /> {{option.name}}\\n              </label>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <hr />\\n      <div class=\\\"text-center\\\">\\n        <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(0);\\\">First</button>\\n        <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(pager.index - 1);\\\">Prev</button>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"goTo(pager.index + 1);\\\">Next</button>\\n        <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(pager.count - 1);\\\">Last</button>\\n        <!-- <pagination *ngIf=\\\"config.showPager\\\" direction-links=\\\"false\\\" total-items=\\\"totalItems\\\" items-per-page=\\\"itemsPerPage\\\" ng-model=\\\"currentPage\\\" ng-change=\\\"pageChanged()\\\"></pagination> -->\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row text-center\\\" *ngIf=\\\"mode=='review'\\\">\\n      <div class=\\\"col-4 cursor-pointer\\\" *ngFor=\\\"let question of quiz.questions; let index = index;\\\">\\n        <div (click)=\\\"goTo(index)\\\" class=\\\"p-3 mb-2 {{ isAnswered(question) == 'Answered'? 'bg-info': 'bg-warning' }}\\\">{{index + 1}}. {{ isAnswered(question) }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"result\\\" *ngIf=\\\"mode=='result'\\\">\\n      \\n      <h2 >Quiz Result</h2>\\n      <div class=\\\"alert-info\\\" style=\\\"padding: 2rem;\\\">\\n      <h4>Correct Answers: {{correctAns}}</h4>\\n      <h4>Your Score:{{percentScore}}%</h4>\\n      </div>\\n      <hr/>\\n      <div *ngFor=\\\"let question of quiz.questions; let index = index\\\">\\n        <div class=\\\"result-question\\\">\\n          <h5>{{index + 1}}. {{question.name}}</h5>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\" *ngFor=\\\"let Option of question.options\\\">\\n              <input id=\\\"{{Option.id}}\\\" type=\\\"checkbox\\\" disabled=\\\"disabled\\\" [(ngModel)]=\\\"Option.selected\\\" /> {{Option.name}}\\n            </div>\\n          </div>\\n          <div class=\\\"p-1 m-2 alert {{ isCorrect(question) == 'correct'? 'alert-success': 'alert-danger'}}\\\">Your answer is {{isCorrect(question)}}.</div>\\n        </div>\\n      </div>\\n      <h4 class=\\\"alert alert-info text-center\\\">You may close this window now.</h4>\\n    </div>\\n    <hr />\\n    <div class = \\\"text-center row mb-5\\\" *ngIf=\\\"mode!='result'\\\">\\n      <div class=\\\"col-2\\\"></div> \\n      <div class=\\\"col-3\\\"><button class=\\\"btn btn-secondary\\\" style=\\\"width:90%\\\" (click)=\\\"mode = 'quiz'\\\">Quiz</button></div>\\n      <div class=\\\"col-3\\\"><button class=\\\"btn btn-primary\\\" style=\\\"width:100%\\\" (click)=\\\"onSubmit();\\\">Submit Quiz</button></div>\\n      <div class=\\\"col-3\\\"><button class=\\\"btn btn-info\\\" style=\\\"width:90%\\\" (click)=\\\"mode = 'review'\\\">Review</button></div>      \\n    </div>\\n  </div>\\n</div>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\nimport { QuizComponent } from './quiz/quiz.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { QuizComponent } from './quiz/quiz.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuizComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export * from './option';\nexport * from './question';\nexport * from './quiz';\nexport * from './quiz-config';\n","export class Option {\n    id: number;\n    questionId: number;\n    name: string;\n    isAnswer: boolean;\n    selected: boolean;\n\n    constructor(data: any) {\n        data = data || {};\n        this.id = data.id;\n        this.questionId = data.questionId;\n        this.name = data.name;\n        this.isAnswer = data.isAnswer;\n    }\n}\n","import { Option } from './option';\n\nexport class Question {\n    id: number;\n    name: string;\n    questionTypeId: number;\n    options: Option[];\n    answered: boolean;\n\n    constructor(data: any) {\n        data = data || {};\n        this.id = data.id;\n        this.name = data.name;\n        this.questionTypeId = data.questionTypeId;\n        this.options = [];\n        data.options.forEach(o => {\n            this.options.push(new Option(o));\n        });\n    }\n}\n","export class QuizConfig {\n    allowBack: boolean;\n    allowReview: boolean;\n    autoMove: boolean;  // if boolean; it will move to next question automatically when answered.\n    duration: number;  // indicates the time in which quiz needs to be completed. 0 means unlimited.\n    pageSize: number;\n    requiredAll: boolean;  // indicates if you must answer all the questions before submitting.\n    richText: boolean;\n    shuffleQuestions: boolean;\n    shuffleOptions: boolean;\n    showClock: boolean;\n    showPager: boolean;\n    theme: string;\n\n    constructor(data: any) {\n        data = data || {};\n        this.allowBack = data.allowBack;\n        this.allowReview = data.allowReview;\n        this.autoMove = data.autoMove;\n        this.duration = data.duration;\n        this.pageSize = data.pageSize;\n        this.requiredAll = data.requiredAll;\n        this.richText = data.richText;\n        this.shuffleQuestions = data.shuffleQuestions;\n        this.shuffleOptions = data.shuffleOptions;\n        this.showClock = data.showClock;\n        this.showPager = data.showPager;\n    }\n}\n","import { QuizConfig } from './quiz-config';\nimport { Question } from './question';\n\nexport class Quiz {\n    id: number;\n    name: string;\n    description: string;\n    config: QuizConfig;\n    questions: Question[];\n\n    constructor(data: any) {\n        if (data) {\n            this.id = data.id;\n            this.name = data.name;\n            this.description = data.description;\n            this.config = new QuizConfig(data.config);\n            this.questions = [];\n            data.questions.forEach(q => {\n                this.questions.push(new Question(q));\n            });\n        }\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1aXovcXVpei5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\n\nimport { QuizService } from \"../services/quiz.service\";\nimport { HelperService } from \"../services/helper.service\";\nimport { Option, Question, Quiz, QuizConfig } from \"../models/index\";\n\n@Component({\n  selector: \"app-quiz\",\n  templateUrl: \"./quiz.component.html\",\n  styleUrls: [\"./quiz.component.css\"],\n  providers: [QuizService],\n})\nexport class QuizComponent implements OnInit {\n  quizes: any[];\n  quiz: Quiz = new Quiz(null);\n  mode = \"quiz\";\n  quizName: string;\n  config: QuizConfig = {\n    allowBack: true,\n    allowReview: true,\n    autoMove: false, // if true, it will move to next question automatically when answered.\n    duration: 600, // indicates the time (in secs) in which quiz needs to be completed. 0 means unlimited.\n    pageSize: 1,\n    requiredAll: false, // indicates if you must answer all the questions before submitting.\n    richText: false,\n    shuffleQuestions: false,\n    shuffleOptions: false,\n    showClock: false,\n    showPager: true,\n    theme: \"none\",\n  };\n\n  pager = {\n    index: 0,\n    size: 1,\n    count: 1,\n  };\n  timer: any = null;\n  startTime: Date;\n  endTime: Date;\n  ellapsedTime = \"00:00\";\n  duration = \"\";\n  correctAns: number = 0;\n  percentScore: number = 0;\n\n  constructor(private quizService: QuizService) {}\n\n  ngOnInit() {\n    this.quizes = this.quizService.getAll();\n    this.quizName = this.quizes[0].id;\n    this.loadQuiz(this.quizName);\n  }\n\n  loadQuiz(quizName: string) {\n    this.quizService.get(quizName).subscribe((res) => {\n      this.quiz = new Quiz(res);\n      this.pager.count = this.quiz.questions.length;\n      this.startTime = new Date();\n      this.ellapsedTime = \"00:00\";\n      this.timer = setInterval(() => {\n        this.tick();\n      }, 1000);\n      this.duration = this.parseTime(this.config.duration);\n    });\n    this.mode = \"quiz\";\n  }\n\n  tick() {\n    const now = new Date();\n    const diff = (now.getTime() - this.startTime.getTime()) / 1000;\n    if (diff >= this.config.duration) {\n      this.onSubmit();\n    }\n    this.ellapsedTime = this.parseTime(diff);\n  }\n\n  parseTime(totalSeconds: number) {\n    let mins: string | number = Math.floor(totalSeconds / 60);\n    let secs: string | number = Math.round(totalSeconds % 60);\n    mins = (mins < 10 ? \"0\" : \"\") + mins;\n    secs = (secs < 10 ? \"0\" : \"\") + secs;\n    return `${mins}:${secs}`;\n  }\n\n  get filteredQuestions() {\n    return this.quiz.questions\n      ? this.quiz.questions.slice(\n          this.pager.index,\n          this.pager.index + this.pager.size\n        )\n      : [];\n  }\n\n  onSelect(question: Question, option: Option) {\n    if (question.questionTypeId === 1) {\n      question.options.forEach((x) => {\n        if (x.id !== option.id) x.selected = false;\n      });\n    }\n\n    if (this.config.autoMove) {\n      this.goTo(this.pager.index + 1);\n    }\n  }\n\n  goTo(index: number) {\n    if (index >= 0 && index < this.pager.count) {\n      this.pager.index = index;\n      this.mode = \"quiz\";\n    }\n  }\n\n  isAnswered(question: Question) {\n    return question.options.find((x) => x.selected)\n      ? \"Answered\"\n      : \"Not Answered\";\n  }\n\n  isCorrect(question: Question) {\n    return question.options.every((x) => x.selected === x.isAnswer)\n      ? \"correct\"\n      : \"wrong\";\n  }\n\n  onSubmit() {\n    let answers = [];\n    this.quiz.questions.forEach((x) =>\n      answers.push({\n        quizId: this.quiz.id,\n        questionId: x.id,\n        answered: x.answered,\n        isCorrect: x.options,\n      })\n    );\n\n    answers.forEach(function (elem) {\n      elem.isCorrect.forEach(function (opt) {\n        if (opt.isAnswer === true) {\n          console.log(opt.name);\n        }\n      });\n    });\n    // Post your data to the server here. answers contains the questionId and the users' answer.\n    console.log(this.quiz.questions);\n    this.calculateResult(this.quiz.questions);\n    this.mode = \"result\";\n  }\n\n  calculateResult(questions: Question[]) {\n    this.correctAns=0;\n    for (var question of questions) {\n      if (this.isCorrect(question) == \"correct\") {\n        this.correctAns++;\n      }\n    }\n    this.percentScore=(this.correctAns/questions.length)*100;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class QuizService {\n\n  constructor(private http: HttpClient) { }\n\n  get(url: string) {\n    return this.http.get(url);\n  }\n\n  getAll() {\n    return [\n      { id: 'data/angular.json', name: 'Angular Quizz' },\n      { id: 'data/JSON.json', name: 'JSON Quizz' },\n      { id: 'data/JavaScript.json', name: 'JavaScript Quizz' },\n    ];\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}